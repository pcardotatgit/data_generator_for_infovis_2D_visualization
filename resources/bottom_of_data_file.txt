
	    //init RGraph
    var rgraph = new $jit.RGraph({
        //Where to append the visualization
        injectInto: 'infovis',
        //Optional: create a background canvas that plots
        //concentric circles color
        background: {
          CanvasStyles: {
            strokeStyle: '#555'
          }
        },
        //Add navigation capabilities:
        //zooming by scrolling and panning.
        Navigation: {
          enable: true,
          panning: true,
          zooming: 10
        },
        //Set Node and Edge styles.
        Node: {
            color: '#FF0000'
        },
        
        Edge: {
          color: '#0000FF',
          lineWidth:2
        },

        onBeforeCompute: function(node){
            Log.write("centering " + node.name + "...");
            //Add the relation list in the right column.
            //This list is taken from the data property of each JSON node.
            $jit.id('inner-details').innerHTML = node.data.relation;
        },
        
        //Add the name of the node in the correponding label
        //and a click handler to move the graph.
        //This method is called once, on label creation.
        onCreateLabel: function(domElement, node){
            domElement.innerHTML = node.name;
            domElement.onclick = function(){
                rgraph.onClick(node.id, {
                    onComplete: function() {
                        Log.write("OK");
                    }
                });
            };
        },
        //Change some label dom properties.
        //This method is called each time a label is plotted.
        onPlaceLabel: function(domElement, node){
            var style = domElement.style;
            style.display = '';
            style.cursor = 'pointer';

            if (node._depth == 0) {
                style.fontSize = "1em";
                style.color = "#FFFFFF";
				if (node.name == "00:20:18:eb:ca:28") 
				{
					style.background = "#CEFF12";
				}
				else 
				{
					style.background = "#4FB912";
				}		
				if (node.name == "The Rockfords") 
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				}  				
            } 
			else if(node._depth == 1){
                style.fontSize = "0.8em";
                //style.color = "#494949";
				style.color = "#BE53A6";
				style.background = "#3aeeb7";				
				if (node.name.search("ORIGIN") >= 0)
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				}           
            } else if(node._depth == 2){
                style.fontSize = "0.7em";
                //style.color = "#494949";
				style.color = "#FC49A6";
				style.background = "#eee91c";
				if (node.name.search("ORIGIN") >= 0)
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				} 				
            
            } else if(node._depth == 3){
                style.fontSize = "0.7em";
                //style.color = "#494949";
				style.background = "#5bee37";
				style.color = "#000000";
				if (node.name.search("ORIGIN") >= 0)
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				}    				
            } else if(node._depth == 4){
                style.fontSize = "0.7em";
                //style.color = "#494949";
				style.background = "#ee79ec";
				style.color = "#000000";
				if (node.name.search("ORIGIN") >= 0)
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				}             
            } else if(node._depth == 5){
                style.fontSize = "0.7em";
                //style.color = "#494949";
				style.background = "#97eaee";
				style.color = "#000000";
				if (node.name.search("ORIGIN") >= 0)
				{
					style.background = "#cc1bee";
					style.color = "#FEFF4C";
				}             
            }			
			else {
                style.display = 'none';
            }

            var left = parseInt(style.left);
            var w = domElement.offsetWidth;
            style.left = (left - w / 2) + 'px';
        }
    });
    //load JSON data
    rgraph.loadJSON(json);
    //trigger small animation
    rgraph.graph.eachNode(function(n) {
      var pos = n.getPos();
      pos.setc(-200, -200);
    });
    rgraph.compute('end');
    rgraph.fx.animate({
      modes:['polar'],
      duration: 2000
    });
    //end
    //append information about the root relations in the right column
    $jit.id('inner-details').innerHTML = rgraph.graph.getNode(rgraph.root).data.relation;
}